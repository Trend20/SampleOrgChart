{"ast":null,"code":"import _objectSpread from \"/home/devenock/Desktop/projects/test/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/devenock/Desktop/projects/test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devenock/Desktop/projects/test/src/components/ChartNode.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { dragNodeService, selectNodeService } from \"./service\";\nimport \"./ChartNode.css\";\nconst propTypes = {\n  datasource: PropTypes.object,\n  NodeTemplate: PropTypes.elementType,\n  draggable: PropTypes.bool,\n  collapsible: PropTypes.bool,\n  multipleSelect: PropTypes.bool,\n  changeHierarchy: PropTypes.func,\n  onClickNode: PropTypes.func\n};\nconst defaultProps = {\n  draggable: false,\n  collapsible: true,\n  multipleSelect: false\n};\n\nconst ChartNode = ({\n  datasource,\n  NodeTemplate,\n  draggable,\n  collapsible,\n  multipleSelect,\n  changeHierarchy,\n  onClickNode\n}) => {\n  const node = useRef();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isChildrenCollapsed = _useState2[0],\n        setIsChildrenCollapsed = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        topEdgeExpanded = _useState4[0],\n        setTopEdgeExpanded = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        rightEdgeExpanded = _useState6[0],\n        setRightEdgeExpanded = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        bottomEdgeExpanded = _useState8[0],\n        setBottomEdgeExpanded = _useState8[1];\n\n  const _useState9 = useState(),\n        _useState10 = _slicedToArray(_useState9, 2),\n        leftEdgeExpanded = _useState10[0],\n        setLeftEdgeExpanded = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        allowedDrop = _useState12[0],\n        setAllowedDrop = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        selected = _useState14[0],\n        setSelected = _useState14[1];\n\n  const nodeClass = [\"oc-node\", isChildrenCollapsed ? \"isChildrenCollapsed\" : \"\", allowedDrop ? \"allowedDrop\" : \"\", selected ? \"selected\" : \"\"].filter(item => item).join(\" \");\n  useEffect(() => {\n    const subs1 = dragNodeService.getDragInfo().subscribe(draggedInfo => {\n      if (draggedInfo) {\n        setAllowedDrop(!document.querySelector(\"#\" + draggedInfo.draggedNodeId).closest(\"li\").querySelector(\"#\" + node.current.id) ? true : false);\n      } else {\n        setAllowedDrop(false);\n      }\n    });\n    const subs2 = selectNodeService.getSelectedNodeInfo().subscribe(selectedNodeInfo => {\n      if (selectedNodeInfo) {\n        if (multipleSelect) {\n          if (selectedNodeInfo.selectedNodeId === datasource.id) {\n            setSelected(true);\n          }\n        } else {\n          setSelected(selectedNodeInfo.selectedNodeId === datasource.id);\n        }\n      } else {\n        setSelected(false);\n      }\n    });\n    return () => {\n      subs1.unsubscribe();\n      subs2.unsubscribe();\n    };\n  }, [multipleSelect, datasource]);\n\n  const addArrows = e => {\n    const node = e.target.closest(\"li\");\n    const parent = node.parentNode.closest(\"li\");\n    const isAncestorsCollapsed = node && parent ? parent.firstChild.classList.contains(\"hidden\") : undefined;\n    const isSiblingsCollapsed = Array.from(node.parentNode.children).some(item => item.classList.contains(\"hidden\"));\n    setTopEdgeExpanded(!isAncestorsCollapsed);\n    setRightEdgeExpanded(!isSiblingsCollapsed);\n    setLeftEdgeExpanded(!isSiblingsCollapsed);\n    setBottomEdgeExpanded(!isChildrenCollapsed);\n  };\n\n  const removeArrows = () => {\n    setTopEdgeExpanded(undefined);\n    setRightEdgeExpanded(undefined);\n    setBottomEdgeExpanded(undefined);\n    setLeftEdgeExpanded(undefined);\n  };\n\n  const toggleAncestors = actionNode => {\n    let node = actionNode.parentNode.closest(\"li\");\n    if (!node) return;\n    const isAncestorsCollapsed = node.firstChild.classList.contains(\"hidden\");\n\n    if (isAncestorsCollapsed) {\n      // 向上展开，只展开一级\n      actionNode.classList.remove(\"isAncestorsCollapsed\");\n      node.firstChild.classList.remove(\"hidden\");\n    } else {\n      // 向下折叠，则折叠所有祖先节点以及祖先节点的兄弟节点\n      const isSiblingsCollapsed = Array.from(actionNode.parentNode.children).some(item => item.classList.contains(\"hidden\"));\n\n      if (!isSiblingsCollapsed) {\n        toggleSiblings(actionNode);\n      }\n\n      actionNode.classList.add(...(\"isAncestorsCollapsed\" + (isSiblingsCollapsed ? \"\" : \" isSiblingsCollapsed\")).split(\" \"));\n      node.firstChild.classList.add(\"hidden\"); // 如果还有展开的祖先节点，那继续折叠关闭之\n\n      if (node.parentNode.closest(\"li\") && !node.parentNode.closest(\"li\").firstChild.classList.contains(\"hidden\")) {\n        toggleAncestors(node);\n      }\n    }\n  };\n\n  const topEdgeClickHandler = e => {\n    e.stopPropagation();\n    setTopEdgeExpanded(!topEdgeExpanded);\n    toggleAncestors(e.target.closest(\"li\"));\n  };\n\n  const bottomEdgeClickHandler = e => {\n    e.stopPropagation();\n    setIsChildrenCollapsed(!isChildrenCollapsed);\n    setBottomEdgeExpanded(!bottomEdgeExpanded);\n  };\n\n  const toggleSiblings = actionNode => {\n    let node = actionNode.previousSibling;\n    const isSiblingsCollapsed = Array.from(actionNode.parentNode.children).some(item => item.classList.contains(\"hidden\"));\n    actionNode.classList.toggle(\"isSiblingsCollapsed\", !isSiblingsCollapsed); // 先处理同级的兄弟节点\n\n    while (node) {\n      if (isSiblingsCollapsed) {\n        node.classList.remove(\"hidden\");\n      } else {\n        node.classList.add(\"hidden\");\n      }\n\n      node = node.previousSibling;\n    }\n\n    node = actionNode.nextSibling;\n\n    while (node) {\n      if (isSiblingsCollapsed) {\n        node.classList.remove(\"hidden\");\n      } else {\n        node.classList.add(\"hidden\");\n      }\n\n      node = node.nextSibling;\n    } // 在展开兄弟节点的同时，还要展开父节点\n\n\n    const isAncestorsCollapsed = actionNode.parentNode.closest(\"li\").firstChild.classList.contains(\"hidden\");\n\n    if (isAncestorsCollapsed) {\n      toggleAncestors(actionNode);\n    }\n  };\n\n  const hEdgeClickHandler = e => {\n    e.stopPropagation();\n    setLeftEdgeExpanded(!leftEdgeExpanded);\n    setRightEdgeExpanded(!rightEdgeExpanded);\n    toggleSiblings(e.target.closest(\"li\"));\n  };\n\n  const filterAllowedDropNodes = id => {\n    dragNodeService.sendDragInfo(id);\n  };\n\n  const clickNodeHandler = event => {\n    if (onClickNode) {\n      onClickNode(datasource);\n    }\n\n    selectNodeService.sendSelectedNodeInfo(datasource.id);\n  };\n\n  const dragstartHandler = event => {\n    const copyDS = _objectSpread({}, datasource);\n\n    delete copyDS.relationship;\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(copyDS)); // highlight all potential drop targets\n\n    filterAllowedDropNodes(node.current.id);\n  };\n\n  const dragoverHandler = event => {\n    // prevent default to allow drop\n    event.preventDefault();\n  };\n\n  const dragendHandler = () => {\n    // reset background of all potential drop targets\n    dragNodeService.clearDragInfo();\n  };\n\n  const dropHandler = event => {\n    if (!event.currentTarget.classList.contains(\"allowedDrop\")) {\n      return;\n    }\n\n    dragNodeService.clearDragInfo();\n    changeHierarchy(JSON.parse(event.dataTransfer.getData(\"text/plain\")), event.currentTarget.id);\n  };\n\n  return React.createElement(\"li\", {\n    className: \"oc-hierarchy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: node,\n    id: datasource.id,\n    className: nodeClass,\n    draggable: draggable ? \"true\" : undefined,\n    onClick: clickNodeHandler,\n    onDragStart: dragstartHandler,\n    onDragOver: dragoverHandler,\n    onDragEnd: dragendHandler,\n    onDrop: dropHandler,\n    onMouseEnter: addArrows,\n    onMouseLeave: removeArrows,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, NodeTemplate ? React.createElement(NodeTemplate, {\n    nodeData: datasource,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"oc-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, datasource.relationship && datasource.relationship.charAt(2) === \"1\" && React.createElement(\"i\", {\n    className: \"oci oci-leader oc-symbol\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }), datasource.name), React.createElement(\"div\", {\n    className: \"oc-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, datasource.title)), collapsible && datasource.relationship && datasource.relationship.charAt(0) === \"1\" && React.createElement(\"i\", {\n    className: `oc-edge verticalEdge topEdge oci ${topEdgeExpanded === undefined ? \"\" : topEdgeExpanded ? \"oci-chevron-down\" : \"oci-chevron-up\"}`,\n    onClick: topEdgeClickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }), collapsible && datasource.relationship && datasource.relationship.charAt(1) === \"1\" && React.createElement(React.Fragment, null, React.createElement(\"i\", {\n    className: `oc-edge horizontalEdge rightEdge oci ${rightEdgeExpanded === undefined ? \"\" : rightEdgeExpanded ? \"oci-chevron-left\" : \"oci-chevron-right\"}`,\n    onClick: hEdgeClickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: `oc-edge horizontalEdge leftEdge oci ${leftEdgeExpanded === undefined ? \"\" : leftEdgeExpanded ? \"oci-chevron-right\" : \"oci-chevron-left\"}`,\n    onClick: hEdgeClickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  })), collapsible && datasource.relationship && datasource.relationship.charAt(2) === \"1\" && React.createElement(\"i\", {\n    className: `oc-edge verticalEdge bottomEdge oci ${bottomEdgeExpanded === undefined ? \"\" : bottomEdgeExpanded ? \"oci-chevron-up\" : \"oci-chevron-down\"}`,\n    onClick: bottomEdgeClickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  })), datasource.children && datasource.children.length > 0 && React.createElement(\"ul\", {\n    className: isChildrenCollapsed ? \"hidden\" : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }, datasource.children.map(node => React.createElement(ChartNode, {\n    datasource: node,\n    NodeTemplate: NodeTemplate,\n    id: node.id,\n    key: node.id,\n    draggable: draggable,\n    collapsible: collapsible,\n    multipleSelect: multipleSelect,\n    changeHierarchy: changeHierarchy,\n    onClickNode: onClickNode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }))));\n};\n\nChartNode.propTypes = propTypes;\nChartNode.defaultProps = defaultProps;\nexport default ChartNode;","map":{"version":3,"sources":["/home/devenock/Desktop/projects/test/src/components/ChartNode.js"],"names":["React","useState","useRef","useEffect","PropTypes","dragNodeService","selectNodeService","propTypes","datasource","object","NodeTemplate","elementType","draggable","bool","collapsible","multipleSelect","changeHierarchy","func","onClickNode","defaultProps","ChartNode","node","isChildrenCollapsed","setIsChildrenCollapsed","topEdgeExpanded","setTopEdgeExpanded","rightEdgeExpanded","setRightEdgeExpanded","bottomEdgeExpanded","setBottomEdgeExpanded","leftEdgeExpanded","setLeftEdgeExpanded","allowedDrop","setAllowedDrop","selected","setSelected","nodeClass","filter","item","join","subs1","getDragInfo","subscribe","draggedInfo","document","querySelector","draggedNodeId","closest","current","id","subs2","getSelectedNodeInfo","selectedNodeInfo","selectedNodeId","unsubscribe","addArrows","e","target","parent","parentNode","isAncestorsCollapsed","firstChild","classList","contains","undefined","isSiblingsCollapsed","Array","from","children","some","removeArrows","toggleAncestors","actionNode","remove","toggleSiblings","add","split","topEdgeClickHandler","stopPropagation","bottomEdgeClickHandler","previousSibling","toggle","nextSibling","hEdgeClickHandler","filterAllowedDropNodes","sendDragInfo","clickNodeHandler","event","sendSelectedNodeInfo","dragstartHandler","copyDS","relationship","dataTransfer","setData","JSON","stringify","dragoverHandler","preventDefault","dragendHandler","clearDragInfo","dropHandler","currentTarget","parse","getData","charAt","name","title","length","map"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { dragNodeService, selectNodeService } from \"./service\";\nimport \"./ChartNode.css\";\n\nconst propTypes = {\n  datasource: PropTypes.object,\n  NodeTemplate: PropTypes.elementType,\n  draggable: PropTypes.bool,\n  collapsible: PropTypes.bool,\n  multipleSelect: PropTypes.bool,\n  changeHierarchy: PropTypes.func,\n  onClickNode: PropTypes.func\n};\n\nconst defaultProps = {\n  draggable: false,\n  collapsible: true,\n  multipleSelect: false\n};\n\nconst ChartNode = ({\n  datasource,\n  NodeTemplate,\n  draggable,\n  collapsible,\n  multipleSelect,\n  changeHierarchy,\n  onClickNode\n}) => {\n  const node = useRef();\n\n  const [isChildrenCollapsed, setIsChildrenCollapsed] = useState(false);\n  const [topEdgeExpanded, setTopEdgeExpanded] = useState();\n  const [rightEdgeExpanded, setRightEdgeExpanded] = useState();\n  const [bottomEdgeExpanded, setBottomEdgeExpanded] = useState();\n  const [leftEdgeExpanded, setLeftEdgeExpanded] = useState();\n  const [allowedDrop, setAllowedDrop] = useState(false);\n  const [selected, setSelected] = useState(false);\n\n  const nodeClass = [\n    \"oc-node\",\n    isChildrenCollapsed ? \"isChildrenCollapsed\" : \"\",\n    allowedDrop ? \"allowedDrop\" : \"\",\n    selected ? \"selected\" : \"\"\n  ]\n    .filter(item => item)\n    .join(\" \");\n\n  useEffect(() => {\n    const subs1 = dragNodeService.getDragInfo().subscribe(draggedInfo => {\n      if (draggedInfo) {\n        setAllowedDrop(\n          !document\n            .querySelector(\"#\" + draggedInfo.draggedNodeId)\n            .closest(\"li\")\n            .querySelector(\"#\" + node.current.id)\n            ? true\n            : false\n        );\n      } else {\n        setAllowedDrop(false);\n      }\n    });\n\n    const subs2 = selectNodeService\n      .getSelectedNodeInfo()\n      .subscribe(selectedNodeInfo => {\n        if (selectedNodeInfo) {\n          if (multipleSelect) {\n            if (selectedNodeInfo.selectedNodeId === datasource.id) {\n              setSelected(true);\n            }\n          } else {\n            setSelected(selectedNodeInfo.selectedNodeId === datasource.id);\n          }\n        } else {\n          setSelected(false);\n        }\n      });\n\n    return () => {\n      subs1.unsubscribe();\n      subs2.unsubscribe();\n    };\n  }, [multipleSelect, datasource]);\n\n  const addArrows = e => {\n    const node = e.target.closest(\"li\");\n    const parent = node.parentNode.closest(\"li\");\n    const isAncestorsCollapsed =\n      node && parent\n        ? parent.firstChild.classList.contains(\"hidden\")\n        : undefined;\n    const isSiblingsCollapsed = Array.from(\n      node.parentNode.children\n    ).some(item => item.classList.contains(\"hidden\"));\n\n    setTopEdgeExpanded(!isAncestorsCollapsed);\n    setRightEdgeExpanded(!isSiblingsCollapsed);\n    setLeftEdgeExpanded(!isSiblingsCollapsed);\n    setBottomEdgeExpanded(!isChildrenCollapsed);\n  };\n\n  const removeArrows = () => {\n    setTopEdgeExpanded(undefined);\n    setRightEdgeExpanded(undefined);\n    setBottomEdgeExpanded(undefined);\n    setLeftEdgeExpanded(undefined);\n  };\n\n  const toggleAncestors = actionNode => {\n    let node = actionNode.parentNode.closest(\"li\");\n    if (!node) return;\n    const isAncestorsCollapsed = node.firstChild.classList.contains(\"hidden\");\n    if (isAncestorsCollapsed) {\n      // 向上展开，只展开一级\n      actionNode.classList.remove(\"isAncestorsCollapsed\");\n      node.firstChild.classList.remove(\"hidden\");\n    } else {\n      // 向下折叠，则折叠所有祖先节点以及祖先节点的兄弟节点\n      const isSiblingsCollapsed = Array.from(\n        actionNode.parentNode.children\n      ).some(item => item.classList.contains(\"hidden\"));\n      if (!isSiblingsCollapsed) {\n        toggleSiblings(actionNode);\n      }\n      actionNode.classList.add(\n        ...(\n          \"isAncestorsCollapsed\" +\n          (isSiblingsCollapsed ? \"\" : \" isSiblingsCollapsed\")\n        ).split(\" \")\n      );\n      node.firstChild.classList.add(\"hidden\");\n      // 如果还有展开的祖先节点，那继续折叠关闭之\n      if (\n        node.parentNode.closest(\"li\") &&\n        !node.parentNode.closest(\"li\").firstChild.classList.contains(\"hidden\")\n      ) {\n        toggleAncestors(node);\n      }\n    }\n  };\n\n  const topEdgeClickHandler = e => {\n    e.stopPropagation();\n    setTopEdgeExpanded(!topEdgeExpanded);\n    toggleAncestors(e.target.closest(\"li\"));\n  };\n\n  const bottomEdgeClickHandler = e => {\n    e.stopPropagation();\n    setIsChildrenCollapsed(!isChildrenCollapsed);\n    setBottomEdgeExpanded(!bottomEdgeExpanded);\n  };\n\n  const toggleSiblings = actionNode => {\n    let node = actionNode.previousSibling;\n    const isSiblingsCollapsed = Array.from(\n      actionNode.parentNode.children\n    ).some(item => item.classList.contains(\"hidden\"));\n    actionNode.classList.toggle(\"isSiblingsCollapsed\", !isSiblingsCollapsed);\n    // 先处理同级的兄弟节点\n    while (node) {\n      if (isSiblingsCollapsed) {\n        node.classList.remove(\"hidden\");\n      } else {\n        node.classList.add(\"hidden\");\n      }\n      node = node.previousSibling;\n    }\n    node = actionNode.nextSibling;\n    while (node) {\n      if (isSiblingsCollapsed) {\n        node.classList.remove(\"hidden\");\n      } else {\n        node.classList.add(\"hidden\");\n      }\n      node = node.nextSibling;\n    }\n    // 在展开兄弟节点的同时，还要展开父节点\n    const isAncestorsCollapsed = actionNode.parentNode\n      .closest(\"li\")\n      .firstChild.classList.contains(\"hidden\");\n    if (isAncestorsCollapsed) {\n      toggleAncestors(actionNode);\n    }\n  };\n\n  const hEdgeClickHandler = e => {\n    e.stopPropagation();\n    setLeftEdgeExpanded(!leftEdgeExpanded);\n    setRightEdgeExpanded(!rightEdgeExpanded);\n    toggleSiblings(e.target.closest(\"li\"));\n  };\n\n  const filterAllowedDropNodes = id => {\n    dragNodeService.sendDragInfo(id);\n  };\n\n  const clickNodeHandler = event => {\n    if (onClickNode) {\n      onClickNode(datasource);\n    }\n\n    selectNodeService.sendSelectedNodeInfo(datasource.id);\n  };\n\n  const dragstartHandler = event => {\n    const copyDS = { ...datasource };\n    delete copyDS.relationship;\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(copyDS));\n    // highlight all potential drop targets\n    filterAllowedDropNodes(node.current.id);\n  };\n\n  const dragoverHandler = event => {\n    // prevent default to allow drop\n    event.preventDefault();\n  };\n\n  const dragendHandler = () => {\n    // reset background of all potential drop targets\n    dragNodeService.clearDragInfo();\n  };\n\n  const dropHandler = event => {\n    if (!event.currentTarget.classList.contains(\"allowedDrop\")) {\n      return;\n    }\n    dragNodeService.clearDragInfo();\n    changeHierarchy(\n      JSON.parse(event.dataTransfer.getData(\"text/plain\")),\n      event.currentTarget.id\n    );\n  };\n\n  return (\n    <li className=\"oc-hierarchy\">\n      <div\n        ref={node}\n        id={datasource.id}\n        className={nodeClass}\n        draggable={draggable ? \"true\" : undefined}\n        onClick={clickNodeHandler}\n        onDragStart={dragstartHandler}\n        onDragOver={dragoverHandler}\n        onDragEnd={dragendHandler}\n        onDrop={dropHandler}\n        onMouseEnter={addArrows}\n        onMouseLeave={removeArrows}\n      >\n        {NodeTemplate ? (\n          <NodeTemplate nodeData={datasource} />\n        ) : (\n          <>\n            <div className=\"oc-heading\">\n              {datasource.relationship &&\n                datasource.relationship.charAt(2) === \"1\" && (\n                  <i className=\"oci oci-leader oc-symbol\" />\n                )}\n              {datasource.name}\n            </div>\n            <div className=\"oc-content\">{datasource.title}</div>\n          </>\n        )}\n        {collapsible &&\n          datasource.relationship &&\n          datasource.relationship.charAt(0) === \"1\" && (\n            <i\n              className={`oc-edge verticalEdge topEdge oci ${\n                topEdgeExpanded === undefined\n                  ? \"\"\n                  : topEdgeExpanded\n                  ? \"oci-chevron-down\"\n                  : \"oci-chevron-up\"\n              }`}\n              onClick={topEdgeClickHandler}\n            />\n          )}\n        {collapsible &&\n          datasource.relationship &&\n          datasource.relationship.charAt(1) === \"1\" && (\n            <>\n              <i\n                className={`oc-edge horizontalEdge rightEdge oci ${\n                  rightEdgeExpanded === undefined\n                    ? \"\"\n                    : rightEdgeExpanded\n                    ? \"oci-chevron-left\"\n                    : \"oci-chevron-right\"\n                }`}\n                onClick={hEdgeClickHandler}\n              />\n              <i\n                className={`oc-edge horizontalEdge leftEdge oci ${\n                  leftEdgeExpanded === undefined\n                    ? \"\"\n                    : leftEdgeExpanded\n                    ? \"oci-chevron-right\"\n                    : \"oci-chevron-left\"\n                }`}\n                onClick={hEdgeClickHandler}\n              />\n            </>\n          )}\n        {collapsible &&\n          datasource.relationship &&\n          datasource.relationship.charAt(2) === \"1\" && (\n            <i\n              className={`oc-edge verticalEdge bottomEdge oci ${\n                bottomEdgeExpanded === undefined\n                  ? \"\"\n                  : bottomEdgeExpanded\n                  ? \"oci-chevron-up\"\n                  : \"oci-chevron-down\"\n              }`}\n              onClick={bottomEdgeClickHandler}\n            />\n          )}\n      </div>\n      {datasource.children && datasource.children.length > 0 && (\n        <ul className={isChildrenCollapsed ? \"hidden\" : \"\"}>\n          {datasource.children.map(node => (\n            <ChartNode\n              datasource={node}\n              NodeTemplate={NodeTemplate}\n              id={node.id}\n              key={node.id}\n              draggable={draggable}\n              collapsible={collapsible}\n              multipleSelect={multipleSelect}\n              changeHierarchy={changeHierarchy}\n              onClickNode={onClickNode}\n            />\n          ))}\n        </ul>\n      )}\n    </li>\n  );\n};\n\nChartNode.propTypes = propTypes;\nChartNode.defaultProps = defaultProps;\n\nexport default ChartNode;\n"]},"metadata":{},"sourceType":"module"}
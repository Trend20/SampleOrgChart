{"ast":null,"code":"import _objectSpread from \"/home/devenock/Desktop/projects/chRTS/react-orgchart/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/devenock/Desktop/projects/chRTS/react-orgchart/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devenock/Desktop/projects/chRTS/react-orgchart/src/components/ChartContainer.js\";\nimport React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { selectNodeService } from \"./service\";\nimport JSONDigger from \"json-digger\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nimport ChartNode from \"./ChartNode\";\nimport \"./ChartContainer.css\";\nconst propTypes = {\n  datasource: PropTypes.object.isRequired,\n  pan: PropTypes.bool,\n  zoom: PropTypes.bool,\n  zoomoutLimit: PropTypes.number,\n  zoominLimit: PropTypes.number,\n  containerClass: PropTypes.string,\n  chartClass: PropTypes.string,\n  NodeTemplate: PropTypes.elementType,\n  draggable: PropTypes.bool,\n  collapsible: PropTypes.bool,\n  multipleSelect: PropTypes.bool,\n  onClickNode: PropTypes.func,\n  onClickChart: PropTypes.func\n};\nconst defaultProps = {\n  pan: false,\n  zoom: false,\n  zoomoutLimit: 0.5,\n  zoominLimit: 7,\n  containerClass: \"\",\n  chartClass: \"\",\n  draggable: false,\n  collapsible: true,\n  multipleSelect: false\n};\nconst ChartContainer = forwardRef(({\n  datasource,\n  pan,\n  zoom,\n  zoomoutLimit,\n  zoominLimit,\n  containerClass,\n  chartClass,\n  NodeTemplate,\n  draggable,\n  collapsible,\n  multipleSelect,\n  onClickNode,\n  onClickChart\n}, ref) => {\n  const container = useRef();\n  const chart = useRef();\n  const downloadButton = useRef();\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        startX = _useState2[0],\n        setStartX = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        startY = _useState4[0],\n        setStartY = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        transform = _useState6[0],\n        setTransform = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        panning = _useState8[0],\n        setPanning = _useState8[1];\n\n  const _useState9 = useState(\"default\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        cursor = _useState10[0],\n        setCursor = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        exporting = _useState12[0],\n        setExporting = _useState12[1];\n\n  const _useState13 = useState(\"\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        dataURL = _useState14[0],\n        setDataURL = _useState14[1];\n\n  const _useState15 = useState(\"\"),\n        _useState16 = _slicedToArray(_useState15, 2),\n        download = _useState16[0],\n        setDownload = _useState16[1];\n\n  const attachRel = (data, flags) => {\n    data.relationship = flags + (data.children && data.children.length > 0 ? 1 : 0);\n\n    if (data.children) {\n      data.children.forEach(function (item) {\n        attachRel(item, \"1\" + (data.children.length > 1 ? 1 : 0));\n      });\n    }\n\n    return data;\n  };\n\n  const _useState17 = useState(datasource),\n        _useState18 = _slicedToArray(_useState17, 2),\n        ds = _useState18[0],\n        setDS = _useState18[1];\n\n  useEffect(() => {\n    setDS(datasource);\n  }, [datasource]);\n  const dsDigger = new JSONDigger(datasource, \"id\", \"children\");\n\n  const clickChartHandler = event => {\n    if (!event.target.closest(\".oc-node\")) {\n      if (onClickChart) {\n        onClickChart();\n      }\n\n      selectNodeService.clearSelectedNodeInfo();\n    }\n  };\n\n  const panEndHandler = () => {\n    setPanning(false);\n    setCursor(\"default\");\n  };\n\n  const panHandler = e => {\n    let newX = 0;\n    let newY = 0;\n\n    if (!e.targetTouches) {\n      // pand on desktop\n      newX = e.pageX - startX;\n      newY = e.pageY - startY;\n    } else if (e.targetTouches.length === 1) {\n      // pan on mobile device\n      newX = e.targetTouches[0].pageX - startX;\n      newY = e.targetTouches[0].pageY - startY;\n    } else if (e.targetTouches.length > 1) {\n      return;\n    }\n\n    if (transform === \"\") {\n      if (transform.indexOf(\"3d\") === -1) {\n        setTransform(\"matrix(1,0,0,1,\" + newX + \",\" + newY + \")\");\n      } else {\n        setTransform(\"matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,\" + newX + \", \" + newY + \",0,1)\");\n      }\n    } else {\n      let matrix = transform.split(\",\");\n\n      if (transform.indexOf(\"3d\") === -1) {\n        matrix[4] = newX;\n        matrix[5] = newY + \")\";\n      } else {\n        matrix[12] = newX;\n        matrix[13] = newY;\n      }\n\n      setTransform(matrix.join(\",\"));\n    }\n  };\n\n  const panStartHandler = e => {\n    if (e.target.closest(\".oc-node\")) {\n      setPanning(false);\n      return;\n    } else {\n      setPanning(true);\n      setCursor(\"move\");\n    }\n\n    let lastX = 0;\n    let lastY = 0;\n\n    if (transform !== \"\") {\n      let matrix = transform.split(\",\");\n\n      if (transform.indexOf(\"3d\") === -1) {\n        lastX = parseInt(matrix[4]);\n        lastY = parseInt(matrix[5]);\n      } else {\n        lastX = parseInt(matrix[12]);\n        lastY = parseInt(matrix[13]);\n      }\n    }\n\n    if (!e.targetTouches) {\n      // pand on desktop\n      setStartX(e.pageX - lastX);\n      setStartY(e.pageY - lastY);\n    } else if (e.targetTouches.length === 1) {\n      // pan on mobile device\n      setStartX(e.targetTouches[0].pageX - lastX);\n      setStartY(e.targetTouches[0].pageY - lastY);\n    } else if (e.targetTouches.length > 1) {\n      return;\n    }\n  };\n\n  const updateChartScale = newScale => {\n    let matrix = [];\n    let targetScale = 1;\n\n    if (transform === \"\") {\n      setTransform(\"matrix(\" + newScale + \", 0, 0, \" + newScale + \", 0, 0)\");\n    } else {\n      matrix = transform.split(\",\");\n\n      if (transform.indexOf(\"3d\") === -1) {\n        targetScale = Math.abs(window.parseFloat(matrix[3]) * newScale);\n\n        if (targetScale > zoomoutLimit && targetScale < zoominLimit) {\n          matrix[0] = \"matrix(\" + targetScale;\n          matrix[3] = targetScale;\n          setTransform(matrix.join(\",\"));\n        }\n      } else {\n        targetScale = Math.abs(window.parseFloat(matrix[5]) * newScale);\n\n        if (targetScale > zoomoutLimit && targetScale < zoominLimit) {\n          matrix[0] = \"matrix3d(\" + targetScale;\n          matrix[5] = targetScale;\n          setTransform(matrix.join(\",\"));\n        }\n      }\n    }\n  };\n\n  const zoomHandler = e => {\n    let newScale = 1 + (e.deltaY > 0 ? -0.2 : 0.2);\n    updateChartScale(newScale);\n  };\n\n  const exportPDF = (canvas, exportFilename) => {\n    const canvasWidth = Math.floor(canvas.width);\n    const canvasHeight = Math.floor(canvas.height);\n    const doc = canvasWidth > canvasHeight ? new jsPDF({\n      orientation: \"landscape\",\n      unit: \"px\",\n      format: [canvasWidth, canvasHeight]\n    }) : new jsPDF({\n      orientation: \"portrait\",\n      unit: \"px\",\n      format: [canvasHeight, canvasWidth]\n    });\n    doc.addImage(canvas.toDataURL(\"image/jpeg\", 1.0), \"JPEG\", 0, 0);\n    doc.save(exportFilename + \".pdf\");\n  };\n\n  const exportPNG = (canvas, exportFilename) => {\n    const isWebkit = \"WebkitAppearance\" in document.documentElement.style;\n    const isFf = !!window.sidebar;\n    const isEdge = navigator.appName === \"Microsoft Internet Explorer\" || navigator.appName === \"Netscape\" && navigator.appVersion.indexOf(\"Edge\") > -1;\n\n    if (!isWebkit && !isFf || isEdge) {\n      window.navigator.msSaveBlob(canvas.msToBlob(), exportFilename + \".png\");\n    } else {\n      setDataURL(canvas.toDataURL());\n      setDownload(exportFilename + \".png\");\n      downloadButton.current.click();\n    }\n  };\n\n  const changeHierarchy = async (draggedItemData, dropTargetId) => {\n    await dsDigger.removeNode(draggedItemData.id);\n    await dsDigger.addChildren(dropTargetId, draggedItemData);\n    setDS(_objectSpread({}, dsDigger.ds));\n  };\n\n  useImperativeHandle(ref, () => ({\n    exportTo: (exportFilename, exportFileextension) => {\n      exportFilename = exportFilename || \"OrgChart\";\n      exportFileextension = exportFileextension || \"png\";\n      setExporting(true);\n      const originalScrollLeft = container.current.scrollLeft;\n      container.current.scrollLeft = 0;\n      const originalScrollTop = container.current.scrollTop;\n      container.current.scrollTop = 0;\n      html2canvas(chart.current, {\n        width: chart.current.clientWidth,\n        height: chart.current.clientHeight,\n        onclone: function (clonedDoc) {\n          clonedDoc.querySelector(\".orgchart\").style.background = \"none\";\n          clonedDoc.querySelector(\".orgchart\").style.transform = \"\";\n        }\n      }).then(canvas => {\n        if (exportFileextension.toLowerCase() === \"pdf\") {\n          exportPDF(canvas, exportFilename);\n        } else {\n          exportPNG(canvas, exportFilename);\n        }\n\n        setExporting(false);\n        container.current.scrollLeft = originalScrollLeft;\n        container.current.scrollTop = originalScrollTop;\n      }, () => {\n        setExporting(false);\n        container.current.scrollLeft = originalScrollLeft;\n        container.current.scrollTop = originalScrollTop;\n      });\n    },\n    expandAllNodes: () => {\n      chart.current.querySelectorAll(\".oc-node.hidden, .oc-hierarchy.hidden, .isSiblingsCollapsed, .isAncestorsCollapsed\").forEach(el => {\n        el.classList.remove(\"hidden\", \"isSiblingsCollapsed\", \"isAncestorsCollapsed\");\n      });\n    }\n  }));\n  return React.createElement(\"div\", {\n    ref: container,\n    className: \"orgchart-container \" + containerClass,\n    onWheel: zoom ? zoomHandler : undefined,\n    onMouseUp: pan && panning ? panEndHandler : undefined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: chart,\n    className: \"orgchart \" + chartClass,\n    style: {\n      transform: transform,\n      cursor: cursor\n    },\n    onClick: clickChartHandler,\n    onMouseDown: pan ? panStartHandler : undefined,\n    onMouseMove: pan && panning ? panHandler : undefined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, React.createElement(ChartNode, {\n    datasource: attachRel(ds, \"00\"),\n    NodeTemplate: NodeTemplate,\n    draggable: draggable,\n    collapsible: collapsible,\n    multipleSelect: multipleSelect,\n    changeHierarchy: changeHierarchy,\n    onClickNode: onClickNode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }))), React.createElement(\"a\", {\n    className: \"oc-download-btn hidden\",\n    ref: downloadButton,\n    href: dataURL,\n    download: download,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(\"div\", {\n    className: `oc-mask ${exporting ? \"\" : \"hidden\"}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"oci oci-spinner spinner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  })));\n});\nChartContainer.propTypes = propTypes;\nChartContainer.defaultProps = defaultProps;\nexport default ChartContainer;","map":{"version":3,"sources":["/home/devenock/Desktop/projects/chRTS/react-orgchart/src/components/ChartContainer.js"],"names":["React","useState","useEffect","useRef","forwardRef","useImperativeHandle","PropTypes","selectNodeService","JSONDigger","html2canvas","jsPDF","ChartNode","propTypes","datasource","object","isRequired","pan","bool","zoom","zoomoutLimit","number","zoominLimit","containerClass","string","chartClass","NodeTemplate","elementType","draggable","collapsible","multipleSelect","onClickNode","func","onClickChart","defaultProps","ChartContainer","ref","container","chart","downloadButton","startX","setStartX","startY","setStartY","transform","setTransform","panning","setPanning","cursor","setCursor","exporting","setExporting","dataURL","setDataURL","download","setDownload","attachRel","data","flags","relationship","children","length","forEach","item","ds","setDS","dsDigger","clickChartHandler","event","target","closest","clearSelectedNodeInfo","panEndHandler","panHandler","e","newX","newY","targetTouches","pageX","pageY","indexOf","matrix","split","join","panStartHandler","lastX","lastY","parseInt","updateChartScale","newScale","targetScale","Math","abs","window","parseFloat","zoomHandler","deltaY","exportPDF","canvas","exportFilename","canvasWidth","floor","width","canvasHeight","height","doc","orientation","unit","format","addImage","toDataURL","save","exportPNG","isWebkit","document","documentElement","style","isFf","sidebar","isEdge","navigator","appName","appVersion","msSaveBlob","msToBlob","current","click","changeHierarchy","draggedItemData","dropTargetId","removeNode","id","addChildren","exportTo","exportFileextension","originalScrollLeft","scrollLeft","originalScrollTop","scrollTop","clientWidth","clientHeight","onclone","clonedDoc","querySelector","background","then","toLowerCase","expandAllNodes","querySelectorAll","el","classList","remove","undefined"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useRef,\n  forwardRef,\n  useImperativeHandle\n} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { selectNodeService } from \"./service\";\nimport JSONDigger from \"json-digger\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nimport ChartNode from \"./ChartNode\";\nimport \"./ChartContainer.css\";\n\nconst propTypes = {\n  datasource: PropTypes.object.isRequired,\n  pan: PropTypes.bool,\n  zoom: PropTypes.bool,\n  zoomoutLimit: PropTypes.number,\n  zoominLimit: PropTypes.number,\n  containerClass: PropTypes.string,\n  chartClass: PropTypes.string,\n  NodeTemplate: PropTypes.elementType,\n  draggable: PropTypes.bool,\n  collapsible: PropTypes.bool,\n  multipleSelect: PropTypes.bool,\n  onClickNode: PropTypes.func,\n  onClickChart: PropTypes.func\n};\n\nconst defaultProps = {\n  pan: false,\n  zoom: false,\n  zoomoutLimit: 0.5,\n  zoominLimit: 7,\n  containerClass: \"\",\n  chartClass: \"\",\n  draggable: false,\n  collapsible: true,\n  multipleSelect: false\n};\n\nconst ChartContainer = forwardRef(\n  (\n    {\n      datasource,\n      pan,\n      zoom,\n      zoomoutLimit,\n      zoominLimit,\n      containerClass,\n      chartClass,\n      NodeTemplate,\n      draggable,\n      collapsible,\n      multipleSelect,\n      onClickNode,\n      onClickChart\n    },\n    ref\n  ) => {\n    const container = useRef();\n    const chart = useRef();\n    const downloadButton = useRef();\n\n    const [startX, setStartX] = useState(0);\n    const [startY, setStartY] = useState(0);\n    const [transform, setTransform] = useState(\"\");\n    const [panning, setPanning] = useState(false);\n    const [cursor, setCursor] = useState(\"default\");\n    const [exporting, setExporting] = useState(false);\n    const [dataURL, setDataURL] = useState(\"\");\n    const [download, setDownload] = useState(\"\");\n\n    const attachRel = (data, flags) => {\n      data.relationship =\n        flags + (data.children && data.children.length > 0 ? 1 : 0);\n      if (data.children) {\n        data.children.forEach(function(item) {\n          attachRel(item, \"1\" + (data.children.length > 1 ? 1 : 0));\n        });\n      }\n      return data;\n    };\n\n    const [ds, setDS] = useState(datasource);\n    useEffect(() => {\n      setDS(datasource);\n    }, [datasource]);\n\n    const dsDigger = new JSONDigger(datasource, \"id\", \"children\");\n\n    const clickChartHandler = event => {\n      if (!event.target.closest(\".oc-node\")) {\n        if (onClickChart) {\n          onClickChart();\n        }\n        selectNodeService.clearSelectedNodeInfo();\n      }\n    };\n\n    const panEndHandler = () => {\n      setPanning(false);\n      setCursor(\"default\");\n    };\n\n    const panHandler = e => {\n      let newX = 0;\n      let newY = 0;\n      if (!e.targetTouches) {\n        // pand on desktop\n        newX = e.pageX - startX;\n        newY = e.pageY - startY;\n      } else if (e.targetTouches.length === 1) {\n        // pan on mobile device\n        newX = e.targetTouches[0].pageX - startX;\n        newY = e.targetTouches[0].pageY - startY;\n      } else if (e.targetTouches.length > 1) {\n        return;\n      }\n      if (transform === \"\") {\n        if (transform.indexOf(\"3d\") === -1) {\n          setTransform(\"matrix(1,0,0,1,\" + newX + \",\" + newY + \")\");\n        } else {\n          setTransform(\n            \"matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,\" + newX + \", \" + newY + \",0,1)\"\n          );\n        }\n      } else {\n        let matrix = transform.split(\",\");\n        if (transform.indexOf(\"3d\") === -1) {\n          matrix[4] = newX;\n          matrix[5] = newY + \")\";\n        } else {\n          matrix[12] = newX;\n          matrix[13] = newY;\n        }\n        setTransform(matrix.join(\",\"));\n      }\n    };\n\n    const panStartHandler = e => {\n      if (e.target.closest(\".oc-node\")) {\n        setPanning(false);\n        return;\n      } else {\n        setPanning(true);\n        setCursor(\"move\");\n      }\n      let lastX = 0;\n      let lastY = 0;\n      if (transform !== \"\") {\n        let matrix = transform.split(\",\");\n        if (transform.indexOf(\"3d\") === -1) {\n          lastX = parseInt(matrix[4]);\n          lastY = parseInt(matrix[5]);\n        } else {\n          lastX = parseInt(matrix[12]);\n          lastY = parseInt(matrix[13]);\n        }\n      }\n      if (!e.targetTouches) {\n        // pand on desktop\n        setStartX(e.pageX - lastX);\n        setStartY(e.pageY - lastY);\n      } else if (e.targetTouches.length === 1) {\n        // pan on mobile device\n        setStartX(e.targetTouches[0].pageX - lastX);\n        setStartY(e.targetTouches[0].pageY - lastY);\n      } else if (e.targetTouches.length > 1) {\n        return;\n      }\n    };\n\n    const updateChartScale = newScale => {\n      let matrix = [];\n      let targetScale = 1;\n      if (transform === \"\") {\n        setTransform(\"matrix(\" + newScale + \", 0, 0, \" + newScale + \", 0, 0)\");\n      } else {\n        matrix = transform.split(\",\");\n        if (transform.indexOf(\"3d\") === -1) {\n          targetScale = Math.abs(window.parseFloat(matrix[3]) * newScale);\n          if (targetScale > zoomoutLimit && targetScale < zoominLimit) {\n            matrix[0] = \"matrix(\" + targetScale;\n            matrix[3] = targetScale;\n            setTransform(matrix.join(\",\"));\n          }\n        } else {\n          targetScale = Math.abs(window.parseFloat(matrix[5]) * newScale);\n          if (targetScale > zoomoutLimit && targetScale < zoominLimit) {\n            matrix[0] = \"matrix3d(\" + targetScale;\n            matrix[5] = targetScale;\n            setTransform(matrix.join(\",\"));\n          }\n        }\n      }\n    };\n\n    const zoomHandler = e => {\n      let newScale = 1 + (e.deltaY > 0 ? -0.2 : 0.2);\n      updateChartScale(newScale);\n    };\n\n    const exportPDF = (canvas, exportFilename) => {\n      const canvasWidth = Math.floor(canvas.width);\n      const canvasHeight = Math.floor(canvas.height);\n      const doc =\n        canvasWidth > canvasHeight\n          ? new jsPDF({\n              orientation: \"landscape\",\n              unit: \"px\",\n              format: [canvasWidth, canvasHeight]\n            })\n          : new jsPDF({\n              orientation: \"portrait\",\n              unit: \"px\",\n              format: [canvasHeight, canvasWidth]\n            });\n      doc.addImage(canvas.toDataURL(\"image/jpeg\", 1.0), \"JPEG\", 0, 0);\n      doc.save(exportFilename + \".pdf\");\n    };\n\n    const exportPNG = (canvas, exportFilename) => {\n      const isWebkit = \"WebkitAppearance\" in document.documentElement.style;\n      const isFf = !!window.sidebar;\n      const isEdge =\n        navigator.appName === \"Microsoft Internet Explorer\" ||\n        (navigator.appName === \"Netscape\" &&\n          navigator.appVersion.indexOf(\"Edge\") > -1);\n\n      if ((!isWebkit && !isFf) || isEdge) {\n        window.navigator.msSaveBlob(canvas.msToBlob(), exportFilename + \".png\");\n      } else {\n        setDataURL(canvas.toDataURL());\n        setDownload(exportFilename + \".png\");\n        downloadButton.current.click();\n      }\n    };\n\n    const changeHierarchy = async (draggedItemData, dropTargetId) => {\n      await dsDigger.removeNode(draggedItemData.id);\n      await dsDigger.addChildren(dropTargetId, draggedItemData);\n      setDS({ ...dsDigger.ds });\n    };\n\n    useImperativeHandle(ref, () => ({\n      exportTo: (exportFilename, exportFileextension) => {\n        exportFilename = exportFilename || \"OrgChart\";\n        exportFileextension = exportFileextension || \"png\";\n        setExporting(true);\n        const originalScrollLeft = container.current.scrollLeft;\n        container.current.scrollLeft = 0;\n        const originalScrollTop = container.current.scrollTop;\n        container.current.scrollTop = 0;\n        html2canvas(chart.current, {\n          width: chart.current.clientWidth,\n          height: chart.current.clientHeight,\n          onclone: function(clonedDoc) {\n            clonedDoc.querySelector(\".orgchart\").style.background = \"none\";\n            clonedDoc.querySelector(\".orgchart\").style.transform = \"\";\n          }\n        }).then(\n          canvas => {\n            if (exportFileextension.toLowerCase() === \"pdf\") {\n              exportPDF(canvas, exportFilename);\n            } else {\n              exportPNG(canvas, exportFilename);\n            }\n            setExporting(false);\n            container.current.scrollLeft = originalScrollLeft;\n            container.current.scrollTop = originalScrollTop;\n          },\n          () => {\n            setExporting(false);\n            container.current.scrollLeft = originalScrollLeft;\n            container.current.scrollTop = originalScrollTop;\n          }\n        );\n      },\n      expandAllNodes: () => {\n        chart.current\n          .querySelectorAll(\n            \".oc-node.hidden, .oc-hierarchy.hidden, .isSiblingsCollapsed, .isAncestorsCollapsed\"\n          )\n          .forEach(el => {\n            el.classList.remove(\n              \"hidden\",\n              \"isSiblingsCollapsed\",\n              \"isAncestorsCollapsed\"\n            );\n          });\n      }\n    }));\n\n    return (\n      <div\n        ref={container}\n        className={\"orgchart-container \" + containerClass}\n        onWheel={zoom ? zoomHandler : undefined}\n        onMouseUp={pan && panning ? panEndHandler : undefined}\n      >\n        <div\n          ref={chart}\n          className={\"orgchart \" + chartClass}\n          style={{ transform: transform, cursor: cursor }}\n          onClick={clickChartHandler}\n          onMouseDown={pan ? panStartHandler : undefined}\n          onMouseMove={pan && panning ? panHandler : undefined}\n        >\n          <ul>\n            <ChartNode\n              datasource={attachRel(ds, \"00\")}\n              NodeTemplate={NodeTemplate}\n              draggable={draggable}\n              collapsible={collapsible}\n              multipleSelect={multipleSelect}\n              changeHierarchy={changeHierarchy}\n              onClickNode={onClickNode}\n            />\n          </ul>\n        </div>\n        <a\n          className=\"oc-download-btn hidden\"\n          ref={downloadButton}\n          href={dataURL}\n          download={download}\n        >\n          &nbsp;\n        </a>\n        <div className={`oc-mask ${exporting ? \"\" : \"hidden\"}`}>\n          <i className=\"oci oci-spinner spinner\"></i>\n        </div>\n      </div>\n    );\n  }\n);\n\nChartContainer.propTypes = propTypes;\nChartContainer.defaultProps = defaultProps;\n\nexport default ChartContainer;\n"]},"metadata":{},"sourceType":"module"}